<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hans.mapper.UserMapper">

    <!--
        在MyBatis的标签中可以使用功能强大的OGNL表达式语言
        MyBatis在动态SQL中支持一下几种标签
            if
            choose (when\otherwise)
            trim (where\set)
            foreach
            bind
    -->

    <select id="selectByUser" resultType="cn.hans.model.SysUser">
        select
          id
          , user_name
          , user_password
          , user_email
          , user_info
          , head_img
          , create_time
        from
          sys_user
        <!--
          这样写当不想使用user_email作为查询条件时则没有办法通过入参来控制SQL语句，只能在接口中再写一个方法。
        where
          user_name like concat('%', #{userName}, '%')
          and user_email = #{userEmail}
          下面的写法则可以通过入参来动态改变SQL语句的查询条件。
        -->
        where 1 = 1
        <if test="userName != null and userName != ''">
            and user_name like concat('%', #{userName}, '%')
        </if>
        <if test="userEmail != '' and userEmail != null">
            and user_email  = #{userEmail}
        </if>
    </select>

    <update id="updateByIdSelective">
        update sys_user
        set
          <if test="userName != null and userName != ''">
              user_name = #{userName},
          </if>
          <if test="userEmail != null and userEmail != ''">
              user_email = #{userEmail},
          </if>
          <if test="userPassword != null and userPassword != ''">
              user_password = #{userPassword},
          </if>
          <if test="userInfo != null and userInfo != ''">
              user_info = #{userInfo},
          </if>
          <if test="headImg != null">
              head_img = #{headImg, jdbcType=BLOB},
          </if>
          <if test="createTime != null">
              create_time = #{createTime, jdbcType=TIMESTAMP},
          </if>
          id = #{id}
        where
          id = #{id}
    </update>

    <update id="updateNone">
    <!--
        语法错误
    -->
        update sys_user
        where id = {id}
    </update>

    <select id="selectById" resultType="SysUser">
        select id, user_name, user_email, user_password, user_info, head_img, create_time
        from sys_user
        where id = #{id}
    </select>

    <insert id="insertSelectiveEmail" useGeneratedKeys="true" keyProperty="id">
        <bind name="print" value="@cn.hans.util.TestBase@printParam(_parameter)"/>
        insert into sys_user (
          user_name, user_password
          <if test="userEmail != '' and userEmail != null">
              <!--
                需要判断userEmail != null, 否则user_email字段并没有使用默认值
              -->
              ,user_email
          </if>
        )
        values (
          #{userName}, #{userPassword}
          <if test="userEmail != null and userEmail != ''">
              , #{userEmail}
          </if>
        )
    </insert>

</mapper>