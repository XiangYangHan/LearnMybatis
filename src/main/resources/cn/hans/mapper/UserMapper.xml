<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    此处命名空间namespace的值需要配置成对应mapper接口的全限定名称
    MaBatis通过映射文件的namespace值将mapper接口与mapper映射文件关联起来
-->
<mapper namespace="cn.hans.mapper.UserMapper">

    <resultMap id="userMap" type="SysUser">
        <id column="id" property="id"/>
        <result property="userName" column="user_name" javaType="str"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
    </resultMap>

    <select id="selectById" resultMap="userMap">
        SELECT id, user_name, user_password, user_email, user_info, head_img, create_time
        FROM sys_user WHERE id = #{id}
    </select>

    <select id="selectAll" resultType="SysUser">
        SELECT id, user_name, user_password, user_email, user_info, head_img, create_time
        FROM sys_user
    </select>

    <select id="selectRolesByUserId" resultType="SysRole">
        select r.id, r.role_name, r.enabled, r.create_by, r.create_time
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <select id="selectRolesWithUserInfoByUserId" resultType="SysRole">
        select r.id, r.role_name, r.enabled, r.create_by, r.create_time, u.user_name `user.userName`, u.user_email `user.userEmail`
        from sys_user u
        inner join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on ur.role_id = r.id
        where u.id = #{userId}
    </select>

    <insert id="insertUser">
        insert into
        sys_user(id, user_name, user_password, user_email, user_info, head_img, create_time)
        values  (
          #{id}, #{userName}, #{userPassword}, #{userEmail}, #{userInfo},
          #{headImg, jdbcType=BLOB}, <!--BLOB对应的类型是ByteArrayInputStream， 就是二进制输入流-->
          #{createTime, jdbcType=TIMESTAMP} <!--Java中的时间一般都会使用java.util.Date，但数据库要区分Date、Time、DateTime，所以这里最好手动指明需要插入的日期类型-->
        )
        <!--
            对于DateTime类型的数据库字段，是用的JdbcType可以是DATE、TIMESTAMP
            数据库日期时间字段与jdbcType对应关系
                Date == DATE
                Time == TIME
                DateTime == TIMESTAMP/DATE
            容易出现的错误：
                No enum constant org.apache.ibatis.type.JdbcType.DATETIME ==== jdbcType名称没有写正确，注意全是大写且没有DATETIME这个jdbcType类型
                Incorrect datetime value: '22:38:01' for column 'create_time' at row 1 ==== jdbcType类型与数据库字段类型不匹配
        -->
    </insert>
</mapper>